#!/usr/bin/env bash

# Exit if any subcommand fails
set -e
set -o pipefail

die() {
    echo >&2 "$@"
    exit 1
}

[ "$#" -eq 1 ] || die "Must provide Lucky version as an argument (i.e. 'v1.0.0'), $# arguments provided"
echo $1 | grep -E -q '^v[0-9.rc-]+$' || die "Version argument required (i.e. 'v1.0.0'), '$1' provided"

VERSION=$1
CLI_BINARY="lucky_cli_$VERSION"
CLI_DIRECTORY="/tmp/$CLI_BINARY"
VERSION_WITHOUT_V="${VERSION:1}"

if [ -d "generated/$VERSION_WITHOUT_V" ]; then
    die "Generated app already exists for '$VERSION' - 'generated/$VERSION_WITHOUT_V' - remove it and try again"
fi

source script/helpers/text_helpers

notice "Cloning Lucky CLI repository - '$VERSION'"
if [ ! -d "$CLI_DIRECTORY" ]; then
    git -c advice.detachedHead=false clone --branch $VERSION --single-branch --depth=1 --quiet https://github.com/luckyframework/lucky_cli.git $CLI_DIRECTORY
else
    echo "Directory already exists for version '$VERSION'"
fi
print_done

notice "Temporarily switching working directory to '$CLI_DIRECTORY'"
pushd $CLI_DIRECTORY > /dev/null
print_done

notice "Installing dependencies"
shards install --quiet
print_done

notice "Building Lucky CLI binary - '$CLI_BINARY'"
crystal build src/lucky.cr -o "$CLI_BINARY"
print_done

notice "Generating Lucky application"
APP_DIRECTORY="my_app"
git config user.name "your-name-here"
git config user.email "your-email-here"
./$CLI_BINARY init.custom $APP_DIRECTORY > /dev/null
rm -rf $APP_DIRECTORY/.git/
print_done

notice "Temporarily switching working directory to '$APP_DIRECTORY'"
pushd $APP_DIRECTORY > /dev/null
print_done

notice "Normalizing secret key config variable"
sed -i '' 's/settings.secret_key_base = ".*"/settings.secret_key_base = "autogenerated"/' config/server.cr
print_done

notice "Returning to original working directory"
popd > /dev/null
popd > /dev/null
print_done

notice "Copying generated application to 'generated' folder"
mv "$CLI_DIRECTORY/$APP_DIRECTORY" "generated/$VERSION_WITHOUT_V"
print_done

notice "Removing Lucky CLI repository - '$CLI_DIRECTORY'"
rm -rf $CLI_DIRECTORY
print_done
